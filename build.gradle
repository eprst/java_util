plugins {
  id 'com.github.ben-manes.versions' version '0.27.0' // adds 'dependencyUpdates'
  id "me.champeau.gradle.jmh" version "0.5.0"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
  mavenCentral()
}

dependencies {
  jmh 'com.google.guava:guava:28.2-jre'
  jmh 'org.apache.commons:commons-text:1.8'
  jmh sourceSets.test.output

  testImplementation 'com.google.guava:guava:28.2-jre'
  testImplementation 'org.apache.commons:commons-text:1.8'
  testImplementation 'junit:junit:4.13'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.canSign = project.hasProperty('signing.password')

compileJava {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

javadoc {
  options.addStringOption('Xdoclint:none', '-quiet')
}

java {
  withJavadocJar()
  withSourcesJar()
}

test {
  afterTest { desc, result ->
    logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
  }
}

artifacts {
  archives jar, javadocJar, sourcesJar
}

tasks.withType(Sign) {
  onlyIf { canSign && isReleaseVersion }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      pom {
        name = 'Murmur3'
        description = 'Fast Murmur3 hash implementation for Java'
        url = 'https://github.com/eprst/murmur3'
        licenses {
          license {
            name = 'Unlicense'
            url = 'https://unlicense.org'
          }
        }
        developers {
          developer {
            id = 'eprst'
            name = 'Konstantin Sobolev'
            email = 'konstantin.sobolev@gmail.com'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/eprst/murmur.git'
          developerConnection = 'scm:git:git@github.com/eprst/murmur.git'
          url = 'https://github.com/eprst/murmur3'
        }
      }
    }
  }
  repositories {
    maven {
      def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
      def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

      credentials {
        username = ossrhUsername
        password = ossrhPassword
      }
    }
  }
}

signing {
  required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
  sign publishing.publications.mavenJava
}
